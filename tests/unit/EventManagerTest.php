<?php
/**
 * @author    Harry Osmar Sitohang <hsitohang@wayfair.com>
 * @copyright 2019 Wayfair LLC - All rights reserved
 */

namespace Sample\Tests\unit;

use Sample\Event\AEvent;
use Sample\Event\BEvent;
use Sample\Listener\XListener;
use Symfony\Component\EventDispatcher\EventDispatcher;

class Something {
  /**
   * @var bool
   */
  private $valid;

  public function __construct() {
    $this->valid = false;
  }

  /**
   * @return bool
   */
  public function isValid() : bool {
    return $this->valid;
  }

  /**
   * @param bool $valid
   */
  public function setValid(bool $valid) {
    $this->valid = $valid;
  }
}

class EventManagerTest extends Base {
  /**
   * @var bool
   */
  private $attributeA;

  /**
   * @var Something
   */
  private $something;

  protected function setUp() {
    parent::setUp(); // TODO: Change the autogenerated stub
    $this->attributeA = false;
    $this->something  = new Something();
  }

  /**
   * @test
   */
  public function eventListenerShouldBeWorkingWithFunctionClosure() {
    $eventDispatcher = new EventDispatcher();
    $eventDispatcher->addListener(
        'test.a',
        function (AEvent $event) {
          $this->attributeA = $event->getValue();
        }
    );

    $eventDispatcher->dispatch('test.a', new AEvent());

    $this->assertTrue($this->attributeA);
  }

  /**
   * @test
   */
  public function eventListenerShouldBeWorkingWithCallableClass() {
    $eventDispatcher = new EventDispatcher();
    $listener        = new XListener();
    $event           = new BEvent($this->something);

    $eventDispatcher->addListener('test.a', $listener);
    $eventDispatcher->dispatch('test.a', $event);

    $this->assertTrue($this->something->isValid());
  }
}